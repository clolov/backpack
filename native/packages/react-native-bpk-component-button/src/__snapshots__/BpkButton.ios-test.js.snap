// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`iOS BpkButton should render correctly 1`] = `
<BVLinearGradient
  colors={
    Array [
      4278245237,
      4278238568,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should render correctly with type="destructive" 1`] = `
<BVLinearGradient
  colors={
    Array [
      4294967295,
      4294967295,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
          Object {
            "borderColor": "rgb(230, 228, 235)",
            "borderWidth": 2,
            "paddingBottom": 6,
            "paddingLeft": 6,
            "paddingRight": 6,
            "paddingTop": 6,
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
              Object {
                "color": "rgb(255, 84, 82)",
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should render correctly with type="featured" 1`] = `
<BVLinearGradient
  colors={
    Array [
      4294592650,
      4292422507,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should render correctly with type="primary" 1`] = `
<BVLinearGradient
  colors={
    Array [
      4278245237,
      4278238568,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should render correctly with type="secondary" 1`] = `
<BVLinearGradient
  colors={
    Array [
      4294967295,
      4294967295,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
          Object {
            "borderColor": "rgb(230, 228, 235)",
            "borderWidth": 2,
            "paddingBottom": 6,
            "paddingLeft": 6,
            "paddingRight": 6,
            "paddingTop": 6,
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
              Object {
                "color": "rgb(0, 178, 214)",
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should support having an icon as well as a title 1`] = `
<BVLinearGradient
  colors={
    Array [
      4278245237,
      4278238568,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
          Object {
            "paddingLeft": 12,
            "paddingRight": 12,
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          Object {
            "justifyContent": "space-between",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
              Object {
                "marginRight": 4,
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
      <Image
        source="../rightarrow_360.png"
      />
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should support having only an icon 1`] = `
<BVLinearGradient
  colors={
    Array [
      4278245237,
      4278238568,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
      Object {
        "minWidth": 32,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
          undefined,
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Image
        source="../rightarrow_360.png"
      />
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should support overwriting styles 1`] = `
<BVLinearGradient
  colors={
    Array [
      4278245237,
      4278238568,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should support the "disabled" property 1`] = `
<BVLinearGradient
  colors={
    Array [
      4278245237,
      4278238568,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
      Object {
        "borderRadius": 24,
        "minHeight": 48,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
          Object {
            "borderRadius": 24,
            "minHeight": 48,
            "paddingLeft": 8,
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
              Object {
                "fontSize": 17,
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should support the "large" property 1`] = `
<BVLinearGradient
  colors={
    Array [
      4278245237,
      4278238568,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
      Object {
        "borderRadius": 24,
        "minHeight": 48,
      },
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
          Object {
            "borderRadius": 24,
            "minHeight": 48,
            "paddingLeft": 8,
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
              Object {
                "fontSize": 17,
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
    </View>
  </View>
</BVLinearGradient>
`;

exports[`iOS BpkButton should support the "selected" property 1`] = `
<BVLinearGradient
  colors={
    Array [
      4278230461,
      4278226088,
    ]
  }
  end={undefined}
  locations={null}
  start={undefined}
  style={
    Array [
      Object {
        "borderRadius": 16,
        "minHeight": 32,
        "minWidth": 150,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Array [
          Object {
            "borderRadius": 16,
            "minHeight": 32,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
          Object {
            "borderColor": "transparent",
          },
        ],
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(37, 32, 51)",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
              "lineHeight": 20,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "rgb(255, 255, 255)",
                "fontSize": 13,
                "fontWeight": "600",
              },
              Object {
                "color": "rgb(255, 255, 255)",
              },
            ],
          ]
        }
      >
        Lorem ipsum
      </Text>
    </View>
  </View>
</BVLinearGradient>
`;
